//look up tables
#define LUT lut_boost_01x_8bit
byte lut_boost_01x_8bit[] = {0,23,43,59,73,85,96,105,113,121,128,134,139,144,149,153,157,161,164,167,170,173,175,178,180,182,184,186,188,190,191,193,194,196,197,198,200,201,202,203,204,205,206,207,208,209,209,210,211,212,213,213,214,215,215,216,216,217,218,218,219,219,220,220,221,221,221,222,222,223,223,224,224,224,225,225,225,226,226,226,227,227,227,228,228,228,228,229,229,229,230,230,230,230,230,231,231,231,231,232,232,232,232,232,233,233,233,233,233,234,234,234,234,234,234,235,235,235,235,235,235,236,236,236,236,236,236,236,237,237,237,237,237,237,237,237,238,238,238,238,238,238,238,238,238,239,239,239,239,239,239,239,239,239,239,240,240,240,240,240,240,240,240,240,240,240,241,241,241,241,241,241,241,241,241,241,241,241,241,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245};



/*find_in_table(val)
 * finds and index in the look up table that is near to the given value 
 * starts in the middle and works outward, selecting the first table value that
 * is closer to the middle or equal to than the given value
 */
byte find_in_table(byte val)
{
  //if lut isnt enabled then do nothing and return the value
  if(!config.lut)
    return val;

  //start in the middle and work outward
  byte idx = 128;
  if(LUT[idx] > val)
  {
    while(LUT[idx] > val && idx > 0)
    {
      idx--;
    }
  }
  else 
  {
    while(LUT[idx] < val && idx < 255)
    {
      idx++;
    }
  }
}
